<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:BvsDesktopLinux.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:i="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
		xmlns:p="clr-namespace:BvsDesktopLinux.Properties"
		xmlns:int="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
        xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"		
		xmlns:converter="using:BvsDesktopLinux.Converters"
		xmlns:models="using:BvsDesktopLinux.Models"
        x:Class="BvsDesktopLinux.Views.MainWindow"
	    mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="200"
        Icon="/Assets/avalonia-logo.ico"
        Title="BvsDesktopLinux">

	<Window.Resources>
		<!-- Определяем картинки, которые будут использованы в Xaml.Behaviors. Используется трюк 
			с ImageBrush, который вполне работоспособен -->
		<ImageBrush x:Key="Banknote100" Source="avares://BvsDesktopLinux/Assets/banknote100.jpg" />
		<ImageBrush x:Key="Banknote200" Source="avares://BvsDesktopLinux/Assets/banknote200.jpg" />

		<!-- Создаём статический объект, который умеет вычислять значение атрибута, используется
			значение другого атрибута -->
		<converter:StatusConverter x:Key="StatusConverter" />
	</Window.Resources>

	<Window.Styles>

		<!-- Определяем стиль для отображения строки DataGrid, в которой отбражается отвергнутая купюра -->
		<Style Selector="DataGridRow.rejectedStatus">
			<Setter Property="Background" Value="Red"/>
			<Setter Property="Foreground" Value="White"/>
		</Style>

		<!-- Управлять цветом фона можно используя Converter
		<Style Selector="DataGridCell" x:DataType="models:Banknote">
			<Setter Property="Background" Value="{Binding Status, Converter={StaticResource StatusConverter}}" />
		</Style> -->

		<!-- Вариант с использованием Avalonia.Xaml.Behavior пока не работает. Вместо него используется LoadingRow
		<Style Selector="DataGridCell.statusColumn">
			<Setter Property="FontSize" Value="24"/>
			<Setter Property="(int:Interaction.Behaviors)">
				<int:BehaviorCollectionTemplate>
					<int:BehaviorCollection>
						<ia:DataTriggerBehavior Binding="{Binding Status}" ComparisonCondition="Equal" Value="Rejected">
							<ia:ChangePropertyAction TargetObject="DataGridCell" PropertyName="Background" Value="Yellow" />
						</ia:DataTriggerBehavior>
					</int:BehaviorCollection>
				</int:BehaviorCollectionTemplate>
			</Setter>
		</Style> -->

	</Window.Styles>
	
	<Grid ColumnDefinitions="*" RowDefinitions="*" >
		
		<Grid IsVisible="{Binding UiVisible}" ColumnDefinitions="auto,*,auto" RowDefinitions="auto,*,auto">
			<StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" Margin="10, 10, 10, 0">
				<!-- Могут быть использованы префиксы: fas (solid), far (regular) и fab (brands) -->
				<Button Margin="0,0,5,0" Command="{Binding RestoreCounts}" CommandParameter="RUB">
					<ToolTip.Tip>
						<ToolTip Background="Yellow" Foreground="Black">
							<TextBlock Margin="3" Text="{x:Static p:Resources.TooltipRestoreCounts}" />
						</ToolTip>
					</ToolTip.Tip>				
					<Border BorderThickness="4">
						<i:Icon Value="fas fa-redo" FontSize="20" />
					</Border>
				</Button>
				<Button FontSize="20" i:Attached.Icon="far fa-file-excel">
					<ToolTip.Tip>
						<ToolTip Background="Yellow" Foreground="Black">
							<TextBlock Margin="3" Text="{x:Static p:Resources.TooltipExportCSV}" />
						</ToolTip>
					</ToolTip.Tip>
				</Button>
				<Button Margin="5,0,5,0" Command="{Binding PrintReport}">
					<ToolTip.Tip>
						<ToolTip Background="Yellow" Foreground="Black">
							<TextBlock Margin="3" Text="{x:Static p:Resources.TooltipPrintReport}" />
						</ToolTip>
					</ToolTip.Tip>
					<Border BorderThickness="4">
						<i:Icon Value="fas fa-print" FontSize="20" />
					</Border>
				</Button>
			</StackPanel>

			<Border Background="LightSkyBlue" BorderBrush="LightSkyBlue" BorderThickness="2" CornerRadius="8" 
					   Grid.Row="0" Grid.Column="1" Margin="0,10,0,0" >
				<TextBlock Text="{x:Static p:Resources.TitleBillReport}" Foreground="White" Background="LightSkyBlue" 
					   FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" />
			</Border>

			<Button i:Attached.Icon="fas fa-trash-alt" FontSize="20"
					Foreground="Red" Margin="10, 10, 10, 0"
					Command="{Binding DeleteBanknote}"
					Grid.Row="0" Grid.Column="2">
				<ToolTip.Tip>
					<ToolTip Background="Yellow" Foreground="Black">
						<TextBlock Margin="3" Text="{x:Static p:Resources.TooltipDeleteNotes}" />
					</ToolTip>
				</ToolTip.Tip>
			</Button>

			<DataGrid AutoGenerateColumns="False" Margin="10" LoadingRow="DataGrid_OnLoadingRow"
					  Items="{Binding Banknotes}" SelectedItem="{Binding SelectedBanknote}"
					  Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
				<DataGrid.Columns>
					<DataGridTextColumn Header="{x:Static p:Resources.NoteId}" Binding="{Binding Id}" />
					<DataGridTextColumn Header="{x:Static p:Resources.NoteCurrency}" Binding="{Binding Currency}" />
					<DataGridTextColumn Header="{x:Static p:Resources.NoteDenomination}" Binding="{Binding Denomination}" />
					<DataGridTextColumn Header="{x:Static p:Resources.Status}" Binding="{Binding Status}" CellStyleClasses="statusColumn" />
				</DataGrid.Columns>
			</DataGrid>

			<StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3">

				<!-- Вариант с привязкой текста к свойству (IsBanknoteSelected) работает -->
				<TextBox Name="textbox" Margin="10,5,10,5">
					<int:Interaction.Behaviors>
						<ia:DataTriggerBehavior Binding="{Binding IsBanknoteSelected}" ComparisonCondition="Equal" Value="true">
							<ia:ChangePropertyAction TargetObject="{Binding #textbox}" PropertyName="Text" Value="Yes! An item selected" />
						</ia:DataTriggerBehavior>
						<ia:DataTriggerBehavior Binding="{Binding IsBanknoteSelected}" ComparisonCondition="Equal" Value="false">
							<ia:ChangePropertyAction TargetObject="{Binding #textbox}" PropertyName="Text" Value="There is no any selection here" />
						</ia:DataTriggerBehavior>
					</int:Interaction.Behaviors>
				</TextBox>

				<!-- Отображаемое изображение также зависит от значения свойства IsBanknoteSelected,
					определенного во ViewModel -->
				<Image Name="image" Height="100" Margin="0,0,0,10">
					<int:Interaction.Behaviors>
						<ia:DataTriggerBehavior Binding="{Binding IsBanknoteSelected}" 
												ComparisonCondition="Equal" Value="true">
							<ia:ChangePropertyAction TargetObject="{Binding #image}" PropertyName="Source"
													 Value="{Binding Source={StaticResource Banknote100}, Path=Source}" />
						</ia:DataTriggerBehavior>
						<ia:DataTriggerBehavior Binding="{Binding IsBanknoteSelected}" 
												ComparisonCondition="Equal" Value="false">
							<ia:ChangePropertyAction TargetObject="{Binding #image}" PropertyName="Source" 
													 Value="{Binding Source={StaticResource Banknote200}, Path=Source}" />
						</ia:DataTriggerBehavior>
					</int:Interaction.Behaviors>
				</Image>

			</StackPanel>

		</Grid>

		<!-- Сообщение, отображаемое в случае невозможности подключения к базе данных -->
		<TextBlock Text="{Binding DbAccessFailure}" IsVisible="{Binding ErrorBlockVisible}"
				   Foreground="Red" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" />
	</Grid>

</Window>
